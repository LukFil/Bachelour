CREATE CONSTRAINT ON (p:Protein)
ASSERT p.Gene_Symbol IS UNIQUE

CREATE CONSTRAINT ON (m:miRNA)
ASSERT m.miRNA IS UNIQUE

CREATE CONSTRAINT ON (g:GO_term)
ASSERT g.value IS UNIQUE

CREATE CONSTRAINT ON (c:STRdb_category)
ASSERT c.value IS UNIQUE

CREATE CONSTRAINT ON (d:STRdb_description)
ASSERT d.value IS UNIQUE

LOAD CSV WITH HEADERS FROM 'file:///mirDIP-dat-neo4j.csv' AS row
MERGE (d:Protein {Gene_Symbol: row.Gene_Symbol})
SET  d.Uniprot = row.Uniprot
RETURN d

LOAD CSV WITH HEADERS FROM 'file:///mirDIP-dat-neo4j.csv' AS row
MERGE (m:miRNA {miRNA: row.miRNA})
SET m.P_Value = row.P_Value, m.FC = row.FC, m.log2FC = row.log2FC, m.source = "suicide"
RETURN m

LOAD CSV WITH HEADERS FROM 'file:///mirDIP-dat-neo4j.csv' AS row
MATCH (p:Protein {Gene_Symbol: row.Gene_Symbol})
MATCH (m:miRNA {miRNA: row.miRNA})
MERGE (m) -[rel: mirDIP {Tool: "mirDIP"}]->(p)
SET rel.Integrated_Score = row.Integrated_Score, rel.Number_of_Sources = row.Number_of_Sources, rel.Score_Class = row.Score_Class, rel.Sources = row.X_Sources
RETURN count(rel)


LOAD CSV WITH HEADERS FROM 'file:///mirTAR-dat-neo4j.csv' AS row
MERGE (d:Protein {Gene_Symbol: row.Target_Gene})
SET d.Entrez_ID = row.Target_Gene_Entrez_ID
RETURN d

LOAD CSV WITH HEADERS FROM 'file:///mirTAR-dat-neo4j.csv' AS row
MERGE (m:miRNA {miRNA: row.miRNA})
SET m.P_Value = row.P_Value, m.FC = row.FC, m.log2FC = row.log2FC, m.source = "suicide"
RETURN m

LOAD CSV WITH HEADERS FROM 'file:///mirTAR-dat-neo4j.csv' AS row
MATCH (p:Protein {Gene_Symbol: row.Target_Gene})
MATCH (m:miRNA {miRNA: row.miRNA})
MERGE (m) -[rel: mirTAR {Tool: "mirTAR"}]->(p)
SET rel.Support_Type = row.Support_Type, rel.Experiments = row.Experiments, rel.References_PMID = row.References_PMID
RETURN count(rel)


# ALL NEURONAL DEATH GO TERM PROTEINS
MATCH (g:GO_term)
WHERE g.value = "GO:1901215" OR g.value = "GO:0043524" OR g.value = "GO:0043523" OR g.value = "GO:1901214"
MATCH (g)-[]->(p:Protein)
MATCH (m:miRNA)-[r]->(p)
RETURN p, m, r
